snippet class "Class" b
class ${1:_name_}:
    """${2:_docstring_}
    """
    def __init__(self, ${3:_params_}):
`!p snip >> 2
params = [p.strip() for p in t[3].split(',')]
for p in params:
    name = p.strip()
    snip.rv += snip.mkline('self._%s = %s\n' % (name, name))
`
endsnippet

snippet dfun "Function with docstring" b
def ${1:_name_}(${2:_prams_}):
    """${3:_docstring_}
`!p snip >> 1
params = [p.strip() for p in t[2].split(',')]
for p in params:
    snip.rv += snip.mkline(":param %s:\n" % p)
`
    """
endsnippet

snippet ifmain "" b
if __name__ == "__main__":
    ${1:_body_}
endsnippet

snippet args "Argument parsing boiler plate" b
parser = argparse.ArgumentParser()
${1}
args = parser.parse_args()
endsnippet

snippet arg "Argument" b
parser.add_argument('${1:_name_}'${2})
endsnippet

snippet " "Multiline comment" b
"""
${0:${VISUAL}}
"""
endsnippet

snippet #- "Section head" b
#---------------------------------------------------------------------------------------------------
# ${0:${VISUAL}}
#---------------------------------------------------------------------------------------------------
endsnippet



